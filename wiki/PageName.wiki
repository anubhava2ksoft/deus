#summary This is a brief tutorial on DEUS.

= Introduction =

Each release contains sources (in the src/ folder), docs and examples.
Sources include the following packages:

  * it.unipr.ce.dsg.deus.core (core interfaces and classes, such as Event, Node, Process)
  * it.unipr.ce.dsg.deus.impl.event (implementation of common events, such as node birth)
  * it.unipr.ce.dsg.deus.impl.node (implementation of basic node classes)
  * it.unipr.ce.dsg.deus.impl.process (implementation of common processes, such as Poisson)
  * it.unipr.ce.dsg.deus.impl.resource (implementation of basic resource classes)
  * it.unipr.ce.dsg.deus.p2p.event (P2P-specific events, such as connection)
  * it.unipr.ce.dsg.deus.p2p.node (P2P-specific node types, such as Peer)
  * it.unipr.ce.dsg.deus.schema (classes that map DEUS' schema)
  * it.unipr.ce.dsg.deus.util (utility classes)


= Configuring simulations =

The schema.. The configuration XML..


= Basic examples =

  * GrowthConnectionsExample
  * SingleSpeedGrowthExample
  * TwoSpeedsGrowthExample


= REVOL example =

REVOL is a P2P system for sharing consumable resources, i.e. resources that cannot be acquired (by replication) once discovered, but may only be directly used upon contracting with their hosts. An example of consumable resource is disk space, which can be partitioned and allocated to requestors for the duration of a task, or in general for an arranged time. 

REVOL networks are unstructured, and can be represented as undirected graphs whose arcs stand for mutual knowledge among peers. The node degree k is the number of neighbors of each node. Its statistical distribution depends on the history and on the dynamics of the network, and may affect the performance of the distributed algorithms which are executed.




= Chord example =
 