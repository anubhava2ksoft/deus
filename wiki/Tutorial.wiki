#summary This is a brief tutorial on DEUS.

= Introduction =

Each release contains sources (in the src/ folder), docs and examples.
Sources include the following packages:

  * it.unipr.ce.dsg.deus.core (core interfaces and classes, such as Event, Node, Process)
  * it.unipr.ce.dsg.deus.impl.event (implementation of common events, such as node birth)
  * it.unipr.ce.dsg.deus.impl.node (implementation of basic node classes)
  * it.unipr.ce.dsg.deus.impl.process (implementation of common processes, such as Poisson)
  * it.unipr.ce.dsg.deus.impl.resource (implementation of basic resource classes)
  * it.unipr.ce.dsg.deus.p2p.event (P2P-specific events, such as connection)
  * it.unipr.ce.dsg.deus.p2p.node (P2P-specific node types, such as Peer)
  * it.unipr.ce.dsg.deus.schema (classes that map DEUS schema)
  * it.unipr.ce.dsg.deus.util (utility classes)


= Configuring simulations =

The schema.. The configuration XML..


= Basic examples =

== Growth Connections ==

== Single Speed Growth ==

== Two Speeds Growth ==


How to run the simulations (we suggest to import deus in Eclipse and to run the simulations from there):

Project: deus

Main Class: it.unipr.ce.dsg.deus.automator.gui.DeusAutomatorFrame

Program Arguments: 
the first parameter passed is the path of the XML configuration file, while the second is the name of the XML file that will be generated by the Automator  

VM Arguments: -Djava.util.logging.config.file=logging.properties -Xms256M -Xmx1000M


Once the DEUS Automator GUI has loaded, you can configure which node paramaters, processes, etc. to vary in order to create many different simulations from the XML configuration file (that was introduced as first program argument).
